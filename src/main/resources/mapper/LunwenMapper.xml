<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lynu.mapper.LunwenMapper">
  <resultMap id="BaseResultMap" type="cn.lynu.model.Lunwen">
    <id column="lunwen_id" jdbcType="INTEGER" property="lunwenId" />
    <result column="lunwen_name" jdbcType="VARCHAR" property="lunwenName" />
    <result column="lunwen_path" jdbcType="VARCHAR" property="lunwenPath" />
    <result column="lunwen_date" jdbcType="TIMESTAMP" property="lunwenDate" />
    <result column="student_id" jdbcType="CHAR" property="studentId" />
    <result column="lunwen_status" jdbcType="INTEGER" property="lunwenStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    lunwen_id, lunwen_name, lunwen_path, lunwen_date, student_id, lunwen_status
  </sql>
  <select id="selectByExample" parameterType="cn.lynu.model.LunwenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lunwen
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lunwen
    where lunwen_id = #{lunwenId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lunwen
    where lunwen_id = #{lunwenId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lynu.model.LunwenExample">
    delete from lunwen
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lynu.model.Lunwen">
    insert into lunwen (lunwen_id, lunwen_name, lunwen_path, 
      lunwen_date, student_id, lunwen_status
      )
    values (#{lunwenId,jdbcType=INTEGER}, #{lunwenName,jdbcType=VARCHAR}, #{lunwenPath,jdbcType=VARCHAR}, 
      #{lunwenDate,jdbcType=TIMESTAMP}, #{studentId,jdbcType=CHAR}, #{lunwenStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.lynu.model.Lunwen">
    insert into lunwen
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lunwenId != null">
        lunwen_id,
      </if>
      <if test="lunwenName != null">
        lunwen_name,
      </if>
      <if test="lunwenPath != null">
        lunwen_path,
      </if>
      <if test="lunwenDate != null">
        lunwen_date,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="lunwenStatus != null">
        lunwen_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lunwenId != null">
        #{lunwenId,jdbcType=INTEGER},
      </if>
      <if test="lunwenName != null">
        #{lunwenName,jdbcType=VARCHAR},
      </if>
      <if test="lunwenPath != null">
        #{lunwenPath,jdbcType=VARCHAR},
      </if>
      <if test="lunwenDate != null">
        #{lunwenDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=CHAR},
      </if>
      <if test="lunwenStatus != null">
        #{lunwenStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lynu.model.LunwenExample" resultType="java.lang.Long">
    select count(*) from lunwen
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lunwen
    <set>
      <if test="record.lunwenId != null">
        lunwen_id = #{record.lunwenId,jdbcType=INTEGER},
      </if>
      <if test="record.lunwenName != null">
        lunwen_name = #{record.lunwenName,jdbcType=VARCHAR},
      </if>
      <if test="record.lunwenPath != null">
        lunwen_path = #{record.lunwenPath,jdbcType=VARCHAR},
      </if>
      <if test="record.lunwenDate != null">
        lunwen_date = #{record.lunwenDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=CHAR},
      </if>
      <if test="record.lunwenStatus != null">
        lunwen_status = #{record.lunwenStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lunwen
    set lunwen_id = #{record.lunwenId,jdbcType=INTEGER},
      lunwen_name = #{record.lunwenName,jdbcType=VARCHAR},
      lunwen_path = #{record.lunwenPath,jdbcType=VARCHAR},
      lunwen_date = #{record.lunwenDate,jdbcType=TIMESTAMP},
      student_id = #{record.studentId,jdbcType=CHAR},
      lunwen_status = #{record.lunwenStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lynu.model.Lunwen">
    update lunwen
    <set>
      <if test="lunwenName != null">
        lunwen_name = #{lunwenName,jdbcType=VARCHAR},
      </if>
      <if test="lunwenPath != null">
        lunwen_path = #{lunwenPath,jdbcType=VARCHAR},
      </if>
      <if test="lunwenDate != null">
        lunwen_date = #{lunwenDate,jdbcType=TIMESTAMP},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=CHAR},
      </if>
      <if test="lunwenStatus != null">
        lunwen_status = #{lunwenStatus,jdbcType=INTEGER},
      </if>
    </set>
    where lunwen_id = #{lunwenId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lynu.model.Lunwen">
    update lunwen
    set lunwen_name = #{lunwenName,jdbcType=VARCHAR},
      lunwen_path = #{lunwenPath,jdbcType=VARCHAR},
      lunwen_date = #{lunwenDate,jdbcType=TIMESTAMP},
      student_id = #{studentId,jdbcType=CHAR},
      lunwen_status = #{lunwenStatus,jdbcType=INTEGER}
    where lunwen_id = #{lunwenId,jdbcType=INTEGER}
  </update>
  
  <select id="getLunwenBySid" resultType="cn.lynu.model.Lunwen">
  	select 
    <include refid="Base_Column_List" />
    from lunwen
    where student_id = #{studentId}
  </select>
  
</mapper>