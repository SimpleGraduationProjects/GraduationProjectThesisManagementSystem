<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lynu.mapper.TeacherMapper">
  <resultMap id="BaseResultMap" type="cn.lynu.model.Teacher">
    <id column="teacher_id" jdbcType="CHAR" property="teacherId" />
    <result column="teacher_describe" jdbcType="VARCHAR" property="teacherDescribe" />
    <result column="teacher_project_num" jdbcType="CHAR" property="teacherProjectNum" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="zhicheng" jdbcType="CHAR" property="zhicheng" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    teacher_id, teacher_describe, teacher_project_num, user_id, dept_id, zhicheng
  </sql>
  <select id="selectByExample" parameterType="cn.lynu.model.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacher_id = #{teacherId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teacher
    where teacher_id = #{teacherId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lynu.model.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lynu.model.Teacher">
    insert into teacher (teacher_id, teacher_describe, teacher_project_num, 
      user_id, dept_id, zhicheng
      )
    values (#{teacherId,jdbcType=CHAR}, #{teacherDescribe,jdbcType=VARCHAR}, #{teacherProjectNum,jdbcType=CHAR}, 
      #{userId,jdbcType=CHAR}, #{deptId,jdbcType=INTEGER}
      , #{zhicheng,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lynu.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacherDescribe != null">
        teacher_describe,
      </if>
      <if test="teacherProjectNum != null">
        teacher_project_num,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="zhicheng != null">
        zhicheng,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=CHAR},
      </if>
      <if test="teacherDescribe != null">
        #{teacherDescribe,jdbcType=VARCHAR},
      </if>
      <if test="teacherProjectNum != null">
        #{teacherProjectNum,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="zhicheng != null">
        #{zhicheng,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lynu.model.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=CHAR},
      </if>
      <if test="record.teacherDescribe != null">
        teacher_describe = #{record.teacherDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherProjectNum != null">
        teacher_project_num = #{record.teacherProjectNum,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.zhicheng != null">
        zhicheng = #{record.zhicheng,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set teacher_id = #{record.teacherId,jdbcType=CHAR},
      teacher_describe = #{record.teacherDescribe,jdbcType=VARCHAR},
      teacher_project_num = #{record.teacherProjectNum,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      zhicheng = #{record.zhicheng,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lynu.model.Teacher">
    update teacher
    <set>
      <if test="teacherDescribe != null">
        teacher_describe = #{teacherDescribe,jdbcType=VARCHAR},
      </if>
      <if test="teacherProjectNum != null">
        teacher_project_num = #{teacherProjectNum,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="zhicheng != null">
        zhicheng = #{zhicheng,jdbcType=CHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lynu.model.Teacher">
    update teacher
    set teacher_describe = #{teacherDescribe,jdbcType=VARCHAR},
      teacher_project_num = #{teacherProjectNum,jdbcType=CHAR},
      user_id = #{userId,jdbcType=CHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      zhicheng = #{zhicheng,jdbcType=CHAR}
    where teacher_id = #{teacherId,jdbcType=CHAR}
  </update>
  
  <resultMap type="cn.lynu.model.Teacher" id="teacherPlus" extends="BaseResultMap">
  	<association property="user" column="user_id" select="cn.lynu.mapper.UserMapper.selectByPrimaryKey"></association>
  </resultMap>
  <resultMap type="cn.lynu.model.Teacher" id="teacherPlus2" extends="teacherPlus">
  	<association property="noChooseProject" column="teacher_id" select="cn.lynu.mapper.ProjectMapper.noChooseProject"></association>
  	<association property="dept" column="dept_id" select="cn.lynu.mapper.DeptMapper.selectByPrimaryKey"></association>
  </resultMap>
  
  <select id="getAllTeacher" resultMap="teacherPlus2">
  	 select 
  	 <include refid="Base_Column_List" />
    from teacher
  </select>
  
  <select id="findTeacherByTeacherId" resultMap="teacherPlus">
  	select 
  	 <include refid="Base_Column_List" />
    from teacher where teacher_id=#{teacherId}
  </select>
  
  <select id="findTeacherByTeacherName" resultMap="teacherPlus2">
  	select teacher.* from user,teacher where user.user_id=teacher.user_id 
  	<if test="teacherName!=null">
	  	and user.user_name LIKE concat('%',#{teacherName},'%')
  	</if>
  </select>
  
  <resultMap type="cn.lynu.model.Teacher" id="TAP" extends="teacherPlus">
  	<collection property="projectList" column="teacher_id" select="cn.lynu.mapper.ProjectMapper.getProjectAndStudent"></collection>
  </resultMap>
  <select id="findTeacherAndProject" resultMap="TAP">
  	select 
  	 <include refid="Base_Column_List" />
    from teacher where teacher_id=#{teacherId}
  </select>
  
   <select id="findTeacherByUserId" resultType="cn.lynu.model.Teacher">
  	select 
  	 <include refid="Base_Column_List" />
    from teacher where user_id=#{userId}
  </select>
  
  <update id="addProjectAfter">
  	update teacher set teacher_project_num=teacher_project_num+1 where teacher_id=#{teacherId}
  </update>
  
</mapper>