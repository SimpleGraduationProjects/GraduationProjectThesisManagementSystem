<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lynu.mapper.WorkTimeMapper">
<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
  <resultMap id="BaseResultMap" type="cn.lynu.model.WorkTime">
    <id column="work_time_id" jdbcType="INTEGER" property="workTimeId" />
    <result column="work_time_info" jdbcType="VARCHAR" property="workTimeInfo" />
    <result column="work_time_start" jdbcType="TIMESTAMP" property="workTimeStart" />
    <result column="work_time_end" jdbcType="TIMESTAMP" property="workTimeEnd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    work_time_id, work_time_info, work_time_start, work_time_end
  </sql>
  <select id="selectByExample" parameterType="cn.lynu.model.WorkTimeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work_time
    where work_time_id = #{workTimeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from work_time
    where work_time_id = #{workTimeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lynu.model.WorkTimeExample">
    delete from work_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lynu.model.WorkTime">
    insert into work_time (work_time_id, work_time_info, work_time_start, 
      work_time_end)
    values (#{workTimeId,jdbcType=INTEGER}, #{workTimeInfo,jdbcType=VARCHAR}, #{workTimeStart,jdbcType=TIMESTAMP}, 
      #{workTimeEnd,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.lynu.model.WorkTime">
    insert into work_time
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workTimeId != null">
        work_time_id,
      </if>
      <if test="workTimeInfo != null">
        work_time_info,
      </if>
      <if test="workTimeStart != null">
        work_time_start,
      </if>
      <if test="workTimeEnd != null">
        work_time_end,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workTimeId != null">
        #{workTimeId,jdbcType=INTEGER},
      </if>
      <if test="workTimeInfo != null">
        #{workTimeInfo,jdbcType=VARCHAR},
      </if>
      <if test="workTimeStart != null">
        #{workTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="workTimeEnd != null">
        #{workTimeEnd,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lynu.model.WorkTimeExample" resultType="java.lang.Long">
    select count(*) from work_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update work_time
    <set>
      <if test="record.workTimeId != null">
        work_time_id = #{record.workTimeId,jdbcType=INTEGER},
      </if>
      <if test="record.workTimeInfo != null">
        work_time_info = #{record.workTimeInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.workTimeStart != null">
        work_time_start = #{record.workTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workTimeEnd != null">
        work_time_end = #{record.workTimeEnd,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update work_time
    set work_time_id = #{record.workTimeId,jdbcType=INTEGER},
      work_time_info = #{record.workTimeInfo,jdbcType=VARCHAR},
      work_time_start = #{record.workTimeStart,jdbcType=TIMESTAMP},
      work_time_end = #{record.workTimeEnd,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lynu.model.WorkTime">
    update work_time
    <set>
      <if test="workTimeInfo != null">
        work_time_info = #{workTimeInfo,jdbcType=VARCHAR},
      </if>
      <if test="workTimeStart != null">
        work_time_start = #{workTimeStart,jdbcType=TIMESTAMP},
      </if>
      <if test="workTimeEnd != null">
        work_time_end = #{workTimeEnd,jdbcType=TIMESTAMP},
      </if>
    </set>
    where work_time_id = #{workTimeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lynu.model.WorkTime">
    update work_time
    set work_time_info = #{workTimeInfo,jdbcType=VARCHAR},
      work_time_start = #{workTimeStart,jdbcType=TIMESTAMP},
      work_time_end = #{workTimeEnd,jdbcType=TIMESTAMP}
    where work_time_id = #{workTimeId,jdbcType=INTEGER}
  </update>
  
  <select id="getWorkTime" resultType="cn.lynu.model.WorkTime">
  	select work_time_info from work_time where #{thisDate} BETWEEN work_time_start AND work_time_end
  </select>
  
</mapper>