<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lynu.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="cn.lynu.model.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="message_body" jdbcType="VARCHAR" property="messageBody" />
    <result column="message_type" jdbcType="INTEGER" property="messageType" />
    <result column="teacher_id" jdbcType="CHAR" property="teacherId" />
    <result column="student_id" jdbcType="CHAR" property="studentId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="response_date" jdbcType="TIMESTAMP" property="responseDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    message_id, message_body, message_type, teacher_id, student_id, create_date, response_date
  </sql>
  <select id="selectByExample" parameterType="cn.lynu.model.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lynu.model.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lynu.model.Message">
    insert into message (message_id, message_body, message_type, 
      teacher_id, student_id, create_date, 
      response_date)
    values (#{messageId,jdbcType=INTEGER}, #{messageBody,jdbcType=VARCHAR}, #{messageType,jdbcType=INTEGER}, 
      #{teacherId,jdbcType=CHAR}, #{studentId,jdbcType=CHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{responseDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.lynu.model.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="messageBody != null">
        message_body,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="responseDate != null">
        response_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="messageBody != null">
        #{messageBody,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=CHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="responseDate != null">
        #{responseDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lynu.model.MessageExample" resultType="java.lang.Long">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.messageBody != null">
        message_body = #{record.messageBody,jdbcType=VARCHAR},
      </if>
      <if test="record.messageType != null">
        message_type = #{record.messageType,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=CHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=CHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.responseDate != null">
        response_date = #{record.responseDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      message_body = #{record.messageBody,jdbcType=VARCHAR},
      message_type = #{record.messageType,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=CHAR},
      student_id = #{record.studentId,jdbcType=CHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      response_date = #{record.responseDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lynu.model.Message">
    update message
    <set>
      <if test="messageBody != null">
        message_body = #{messageBody,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=CHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="responseDate != null">
        response_date = #{responseDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lynu.model.Message">
    update message
    set message_body = #{messageBody,jdbcType=VARCHAR},
      message_type = #{messageType,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=CHAR},
      student_id = #{studentId,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      response_date = #{responseDate,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>