<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lynu.mapper.YansouTeacherMapper">
<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
  <resultMap id="BaseResultMap" type="cn.lynu.model.YansouTeacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="yansou_team_id" jdbcType="INTEGER" property="yansouTeamId" />
    <result column="teacher_id" jdbcType="CHAR" property="teacherId" />
    <result column="is_leader" jdbcType="INTEGER" property="isLeader" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, yansou_team_id, teacher_id, is_leader
  </sql>
  <select id="selectByExample" parameterType="cn.lynu.model.YansouTeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yansou_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yansou_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yansou_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lynu.model.YansouTeacherExample">
    delete from yansou_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lynu.model.YansouTeacher">
    insert into yansou_teacher (id, yansou_team_id, teacher_id, 
      is_leader)
    values (#{id,jdbcType=INTEGER}, #{yansouTeamId,jdbcType=INTEGER}, #{teacherId,jdbcType=CHAR}, 
      #{isLeader,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.lynu.model.YansouTeacher">
    insert into yansou_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="yansouTeamId != null">
        yansou_team_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="isLeader != null">
        is_leader,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="yansouTeamId != null">
        #{yansouTeamId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=CHAR},
      </if>
      <if test="isLeader != null">
        #{isLeader,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lynu.model.YansouTeacherExample" resultType="java.lang.Long">
    select count(*) from yansou_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yansou_teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.yansouTeamId != null">
        yansou_team_id = #{record.yansouTeamId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=CHAR},
      </if>
      <if test="record.isLeader != null">
        is_leader = #{record.isLeader,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yansou_teacher
    set id = #{record.id,jdbcType=INTEGER},
      yansou_team_id = #{record.yansouTeamId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=CHAR},
      is_leader = #{record.isLeader,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lynu.model.YansouTeacher">
    update yansou_teacher
    <set>
      <if test="yansouTeamId != null">
        yansou_team_id = #{yansouTeamId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=CHAR},
      </if>
      <if test="isLeader != null">
        is_leader = #{isLeader,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lynu.model.YansouTeacher">
    update yansou_teacher
    set yansou_team_id = #{yansouTeamId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=CHAR},
      is_leader = #{isLeader,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap type="cn.lynu.model.YansouTeacher" id="yansouTeacherPlus" extends="BaseResultMap">
  	<association property="teacher" column="teacher_id" select="cn.lynu.mapper.TeacherMapper.findTeacherByTeacherId"></association>
  </resultMap>
  <select id="selectTeacherInfoByYansouTeamId" resultMap="yansouTeacherPlus">
  	select 
    <include refid="Base_Column_List" />
    from yansou_teacher
    where yansou_team_id = #{yansouTeamId}
  </select>
  
   <select id="selectYansouTeacherByTeacherId" resultType="cn.lynu.model.YansouTeacher">
  	select 
  	<include refid="Base_Column_List" />
  	from yansou_teacher where teacher_id = #{teacherId}
  </select>
  
</mapper>